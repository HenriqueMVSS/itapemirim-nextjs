import Head from 'next/head'
import Image from 'next/image'
import { Feed, FeedProps } from '../src/components/Feed'
import { Footer } from '../src/components/Footer'
import type { GetServerSideProps, GetStaticProps } from 'next'
import { FooterMobile } from '../src/components/FooterMobile'
import { Header, HeaderProps } from '../src/layout/Header'
import {apolloClient, gql} from '../src/apolloClient'
import { userInfo } from 'os'


export type HomeProps = { 
  posts: FeedProps["items"];
  pagination: FeedProps["pagination"];
  userInfo: HeaderProps
}

export default function Home({posts, pagination, userInfo}:HomeProps) {
  return (
    <article>
      <Head>
        <title>Viação Itapemirim</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/ita.jpg" />
      </Head>

      <header>
          <Header  {... userInfo}/>
        </header>
        <div className="feed-container">
          <Feed items={posts} pagination={pagination}/>
        </div>

      <footer className="footer">
        <Footer/>
      </footer> 
      <footer className="footer-mobile">
        <FooterMobile />
      </footer>
      <style jsx>{`
        .footer-mobile {
          display:none;
        }

        .footer {
          position: fixed;
          bottom: 0;
          left: 0;
          width: 100%;
        }

        @media(max-width: 600px){
            .footer {
              display: none;
            }

            .footer-mobile {
              display:block;
              position: fixed;
              bottom: 0;
              left: 0;
              width: 100%;
            }
        }

        @media(max-height: 600px){
            .footer {
                display: none;
            }

            .footer-mobile {
              display:block;
              position: fixed;
              bottom: 0;
              left: 0;
              width: 100%;
            }
        }
      `}</style>
    </article>
  )
}


export const getStaticProps : GetStaticProps<HomeProps> = async () => {

  const {posts, pagination} = await getPosts();
  const userInfo = await getUserInfo();

console.log(userInfo)
  return {
    props: {
      posts,
      pagination,
      userInfo
    },
  }
}

async function getUserInfo(): Promise<HeaderProps>{
  const result = await apolloClient.query({
    query: gql`
      query{
        userita {
          data{
            attributes{
              name
              description
              avatar{
                data{
                  attributes{
                    url
                  }
                }
              }
            }
          }
        }
      }
    `
  })
  
  const {name, description, avatar:{ data: { attributes: { url: avatar }}}} = result.data.userita.data.attributes;

  return {name, description, avatar: `https://webservices.jumpingcrab.com${avatar}`}
}

async function getPosts(){
  const result = await apolloClient.query({
    query: gql`
      query{
      itaPosts (pagination:{
        pageSize:4,
        page:1
      }){
        meta {
          pagination{
            page
            pageSize
            pageCount
          }
        }
      data{
          attributes{
            title
            slug
            image{
              data{
                  attributes{
                    url
                  }
                }
              }
            }
          }
        }
      }
    `
  })

  const posts : FeedProps['items'] = result.data.itaPosts.data.map(({attributes: {title, slug, image: { data: { attributes: { url : image}}}}}:any)=> ({
    image:`https://webservices.jumpingcrab.com${image}`,
    link: `/posts/${slug}`,
    title,
  }));

  const { page:currentPage, pageCount } = result.data.itaPosts.meta.pagination;

  const pagination = {
    pageCount,
    currentPage,
    hasNextPage: pageCount > currentPage,
    hasPreviousPage: false,
  }

  return {posts, pagination};
}